---
interface IFileProps {
  node: {
    asset: {
      _ref: string;
      url?: string;
    };
  };
}

const { node } = Astro.props as IFileProps;

// Build Sanity file URL from asset reference
function buildFileUrl(ref: string): string {
  const [, id, extension] = ref.split("-");
  const projectId = import.meta.env.PUBLIC_SANITY_PROJECT_ID;
  if (!projectId) {
    throw new Error("Sanity project ID is not set. Please define PUBLIC_SANITY_PROJECT_ID in your environment variables.");
  }
  return `https://cdn.sanity.io/files/${projectId}/production/${id}.${extension}`;
}

const fileUrl = node.asset?.url || (node.asset?._ref ? buildFileUrl(node.asset._ref) : "");
const fileName = fileUrl.split("/").pop() || "Download file";
---

{
  fileUrl && (
    <div class="file-download">
      <a href={fileUrl} download target="_blank" rel="noopener noreferrer">
        ðŸ“Ž {fileName}
      </a>
    </div>
  )
}

<style>
  .file-download {
    margin: 1.5rem 0;
    padding: 1rem;
    background: #f5f5f5;
    border-radius: 8px;
    border: 1px solid #ddd;
  }

  .file-download a {
    color: #0066cc;
    text-decoration: none;
    font-weight: 500;
  }

  .file-download a:hover {
    text-decoration: underline;
  }
</style>
