---
interface IImageProps {
  node: {
    asset: {
      _ref: string;
    };
    alt?: string;
    caption?: string;
  };
}

const { node } = Astro.props as IImageProps;

// Build Sanity image URL from asset reference
const SANITY_PROJECT_ID = import.meta.env.PUBLIC_SANITY_PROJECT_ID;
function buildImageUrl(ref: string): string {
  const [, id, dimensions, format] = ref.split("-");
  return `https://cdn.sanity.io/images/${SANITY_PROJECT_ID}/production/${id}-${dimensions}.${format}`;
}

const imageUrl = node.asset?._ref ? buildImageUrl(node.asset._ref) : "";
---

{
  imageUrl && (
    <figure class="content-image">
      <img src={imageUrl} alt={node.alt || ""} loading="lazy" />
      {node.caption && <figcaption>{node.caption}</figcaption>}
    </figure>
  )
}

<style>
  .content-image {
    margin: 2.5rem 0;
    text-align: center;
  }

  .content-image img {
    width: 100%;
    height: auto;
    border-radius: 12px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    transition: transform 0.2s ease;
  }

  .content-image img:hover {
    transform: scale(1.02);
  }

  .content-image figcaption {
    margin-top: 0.75rem;
    font-size: 0.95rem;
    opacity: 0.75;
    font-style: italic;
    line-height: 1.5;
  }

  @media (max-width: 768px) {
    .content-image {
      margin: 2rem 0;
    }
  }
</style>
